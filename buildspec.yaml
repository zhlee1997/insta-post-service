version: 0.2

phases:
  pre_build:
    commands:
      - echo Installing Amazon Corretto 21...
      - wget --no-verbose -O corretto-21.0.1.12.1.tar.gz https://corretto.aws/downloads/resources/21.0.1.12.1/amazon-corretto-21.0.1.12.1-linux-x64.tar.gz
      - mkdir -p /tmp/corretto21
      - tar -zxf corretto-21.0.1.12.1.tar.gz -C /tmp/corretto21
      - export PATH=/tmp/corretto21/amazon-corretto-21.0.1.12.1-linux-x64/bin:$PATH
      - export JAVA_HOME=/tmp/corretto21/amazon-corretto-21.0.1.12.1-linux-x64
      - java -version
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=565428532910.dkr.ecr.ap-southeast-1.amazonaws.com/insta-java-registry
      - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"course-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      # add your container name
      - DOCKER_CONTAINER_NAME=insta-java-registry
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/course-service.jar